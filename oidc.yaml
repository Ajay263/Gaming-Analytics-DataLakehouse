AWSTemplateFormatVersion: '2010-09-09'
Description: 'GitHub Actions OIDC Provider and IAM Role for Terraform Operations'

Parameters:
  Repo:
    Description: 'The GitHub organization/repository (format: org/repo)'
    Type: String
  Environment:
    Description: 'The GitHub Actions environment name'
    Type: String
    Default: 'production'
  TerraformBackendStackName:
    Description: 'Name of the CloudFormation stack that created the S3 backend'
    Type: String
    Default: 'terraform-backend'

Resources:
  GitHubOIDCProvider:
    Type: 'AWS::IAM::OIDCProvider'
    Properties:
      Url: 'https://token.actions.githubusercontent.com'
      ClientIdList:
        - 'sts.amazonaws.com'
      ThumbprintList:
        - '6938fd4d98bab03faadb97b34396831e3780aea1'
        - '1c58a3a8518e8759bf075b76b750d4f2df264fcd'
      Tags:
        - Key: Purpose
          Value: GitHubActions

  TerraformDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'github-actions-${AWS::StackName}'
      Description: 'IAM Role for GitHub Actions to deploy infrastructure using Terraform'
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com'
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${Repo}:environment:${Environment}'
      ManagedPolicyArns:
        - !ImportValue 
          'Fn::Sub': '${TerraformBackendStackName}-TerraformStateAccessPolicyArn'

  TerraformDeployPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: 'Policy for Terraform deployments via GitHub Actions'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              # EC2 Permissions
              - 'ec2:*'
              # VPC Permissions
              - 'vpc:*'
              # IAM Permissions
              - 'iam:GetRole'
              - 'iam:CreateRole'
              - 'iam:DeleteRole'
              - 'iam:PutRolePolicy'
              - 'iam:GetRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:ListRolePolicies'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:AttachRolePolicy'
              - 'iam:DetachRolePolicy'
              - 'iam:PassRole'
              # CloudWatch Logs
              - 'logs:*'
              # KMS for Encryption
              - 'kms:*'
            Resource: '*'

      Roles:
        - !Ref TerraformDeployRole

Outputs:
  RoleARN:
    Description: 'ARN of the IAM Role for GitHub Actions'
    Value: !GetAtt TerraformDeployRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-RoleARN'
  
  RoleName:
    Description: 'Name of the IAM Role for GitHub Actions'
    Value: !Ref TerraformDeployRole
    Export:
      Name: !Sub '${AWS::StackName}-RoleName'

  OIDCProviderArn:
    Description: 'ARN of the OIDC Provider'
    Value: !GetAtt GitHubOIDCProvider.Arn
    Export:
      Name: !Sub '${AWS::StackName}-OIDCProviderArn' 